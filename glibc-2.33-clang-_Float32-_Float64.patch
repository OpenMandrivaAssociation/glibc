diff -up glibc-2.41/bits/floatn-common.h.39~ glibc-2.41/bits/floatn-common.h
--- glibc-2.41/bits/floatn-common.h.39~	2025-01-28 18:31:33.000000000 +0100
+++ glibc-2.41/bits/floatn-common.h	2025-02-03 15:52:10.354296147 +0100
@@ -145,7 +145,7 @@ typedef _Complex float __cfloat16 __attr
 # endif
 
 # if __HAVE_FLOAT32
-#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0))
+#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)) || defined __clang__
 #   define __CFLOAT32 _Complex float
 #  else
 #   define __CFLOAT32 _Complex _Float32
@@ -153,7 +153,7 @@ typedef _Complex float __cfloat16 __attr
 # endif
 
 # if __HAVE_FLOAT64
-#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0))
+#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)) || defined __clang__
 #   ifdef __NO_LONG_DOUBLE_MATH
 #    define __CFLOAT64 _Complex long double
 #   else
@@ -165,7 +165,7 @@ typedef _Complex float __cfloat16 __attr
 # endif
 
 # if __HAVE_FLOAT32X
-#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0))
+#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)) || defined __clang__
 #   define __CFLOAT32X _Complex double
 #  else
 #   define __CFLOAT32X _Complex _Float32x
@@ -173,7 +173,7 @@ typedef _Complex float __cfloat16 __attr
 # endif
 
 # if __HAVE_FLOAT64X
-#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0))
+#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)) || defined __clang__
 #   if __HAVE_FLOAT64X_LONG_DOUBLE
 #    define __CFLOAT64X _Complex long double
 #   else
@@ -210,11 +210,11 @@ typedef float _Float16 __attribute__ ((_
 
 # if __HAVE_FLOAT32
 
-#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0))
+#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)) || defined __clang__
 typedef float _Float32;
 #  endif
 
-#  if !__GNUC_PREREQ (7, 0)
+#  if !__GNUC_PREREQ (7, 0) || defined __clang__
 #   define __builtin_huge_valf32() (__builtin_huge_valf ())
 #   define __builtin_inff32() (__builtin_inff ())
 #   define __builtin_nanf32(x) (__builtin_nanf (x))
@@ -234,11 +234,11 @@ typedef float _Float32;
 
 #  ifdef __NO_LONG_DOUBLE_MATH
 
-#   if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0))
+#   if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)) || defined __clang__
 typedef long double _Float64;
 #   endif
 
-#   if !__GNUC_PREREQ (7, 0)
+#   if !__GNUC_PREREQ (7, 0) || defined __clang__
 #    define __builtin_huge_valf64() (__builtin_huge_vall ())
 #    define __builtin_inff64() (__builtin_infl ())
 #    define __builtin_nanf64(x) (__builtin_nanl (x))
@@ -247,11 +247,11 @@ typedef long double _Float64;
 
 #  else
 
-#   if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0))
+#   if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)) || defined __clang__
 typedef double _Float64;
 #   endif
 
-#   if !__GNUC_PREREQ (7, 0)
+#   if !__GNUC_PREREQ (7, 0) || defined __clang__
 #    define __builtin_huge_valf64() (__builtin_huge_val ())
 #    define __builtin_inff64() (__builtin_inf ())
 #    define __builtin_nanf64(x) (__builtin_nan (x))
@@ -264,11 +264,11 @@ typedef double _Float64;
 
 # if __HAVE_FLOAT32X
 
-#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0))
+#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)) || defined __clang__
 typedef double _Float32x;
 #  endif
 
-#  if !__GNUC_PREREQ (7, 0)
+#  if !__GNUC_PREREQ (7, 0) || defined __clang__
 #   define __builtin_huge_valf32x() (__builtin_huge_val ())
 #   define __builtin_inff32x() (__builtin_inf ())
 #   define __builtin_nanf32x(x) (__builtin_nan (x))
@@ -281,11 +281,11 @@ typedef double _Float32x;
 
 #  if __HAVE_FLOAT64X_LONG_DOUBLE
 
-#   if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0))
+#   if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)) || defined __clang__
 typedef long double _Float64x;
 #   endif
 
-#   if !__GNUC_PREREQ (7, 0)
+#   if !__GNUC_PREREQ (7, 0) || defined __clang__
 #    define __builtin_huge_valf64x() (__builtin_huge_vall ())
 #    define __builtin_inff64x() (__builtin_infl ())
 #    define __builtin_nanf64x(x) (__builtin_nanl (x))
@@ -294,11 +294,11 @@ typedef long double _Float64x;
 
 #  else
 
-#   if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0))
+#   if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)) || defined __clang__
 typedef _Float128 _Float64x;
 #   endif
 
-#   if !__GNUC_PREREQ (7, 0)
+#   if !__GNUC_PREREQ (7, 0) || defined __clang__
 #    define __builtin_huge_valf64x() (__builtin_huge_valf128 ())
 #    define __builtin_inff64x() (__builtin_inff128 ())
 #    define __builtin_nanf64x(x) (__builtin_nanf128 (x))
@@ -311,11 +311,11 @@ typedef _Float128 _Float64x;
 
 # if __HAVE_FLOAT128X
 
-#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0))
+#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)) || defined __clang__
 #   error "_Float128x supported but no type"
 #  endif
 
-#  if !__GNUC_PREREQ (7, 0)
+#  if !__GNUC_PREREQ (7, 0) || defined __clang__
 #   define __builtin_huge_valf128x() ((_Float128x) __builtin_huge_val ())
 #   define __builtin_inff128x() ((_Float128x) __builtin_inf ())
 #   define __builtin_nanf128x(x) ((_Float128x) __builtin_nan (x))
diff -up glibc-2.41/math/math.h.39~ glibc-2.41/math/math.h
--- glibc-2.41/math/math.h.39~	2025-02-03 15:52:10.257746819 +0100
+++ glibc-2.41/math/math.h	2025-02-03 15:52:10.354671714 +0100
@@ -1361,7 +1361,7 @@ template<> struct __iseqsig_type<long do
   }
 };
 
-#  if __HAVE_FLOAT32 && __GNUC_PREREQ (13, 0)
+#  if __HAVE_FLOAT32 && __GNUC_PREREQ (13, 0) && !defined(__clang__)
 template<> struct __iseqsig_type<_Float32>
 {
   static int __call (_Float32 __x, _Float32 __y) throw ()
@@ -1371,7 +1371,7 @@ template<> struct __iseqsig_type<_Float3
 };
 #  endif
 
-#  if __HAVE_FLOAT64 && __GNUC_PREREQ (13, 0)
+#  if __HAVE_FLOAT64 && __GNUC_PREREQ (13, 0) && !defined(__clang__)
 template<> struct __iseqsig_type<_Float64>
 {
   static int __call (_Float64 __x, _Float64 __y) throw ()
@@ -1397,7 +1397,7 @@ template<> struct __iseqsig_type<_Float1
 };
 #  endif
 
-#  if __HAVE_FLOAT32X && __GNUC_PREREQ (13, 0)
+#  if __HAVE_FLOAT32X && __GNUC_PREREQ (13, 0) && !defined(__clang__)
 template<> struct __iseqsig_type<_Float32x>
 {
   static int __call (_Float32x __x, _Float32x __y) throw ()
@@ -1407,7 +1407,7 @@ template<> struct __iseqsig_type<_Float3
 };
 #  endif
 
-#  if __HAVE_FLOAT64X && __GNUC_PREREQ (13, 0)
+#  if __HAVE_FLOAT64X && __GNUC_PREREQ (13, 0) && !defined(__clang__)
 template<> struct __iseqsig_type<_Float64x>
 {
   static int __call (_Float64x __x, _Float64x __y) throw ()
diff -up glibc-2.41/sysdeps/ieee754/ldbl-128/bits/floatn.h.39~ glibc-2.41/sysdeps/ieee754/ldbl-128/bits/floatn.h
--- glibc-2.41/sysdeps/ieee754/ldbl-128/bits/floatn.h.39~	2025-01-28 18:31:33.000000000 +0100
+++ glibc-2.41/sysdeps/ieee754/ldbl-128/bits/floatn.h	2025-02-03 15:52:10.354425973 +0100
@@ -55,7 +55,7 @@
 /* Defined to concatenate the literal suffix to be used with _Float128
    types, if __HAVE_FLOAT128 is 1. */
 # if __HAVE_FLOAT128
-#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0))
+#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)) || defined __clang__
 /* The literal suffix f128 exists only since GCC 7.0.  */
 #   define __f128(x) x##l
 #  else
@@ -65,7 +65,7 @@
 
 /* Defined to a complex binary128 type if __HAVE_FLOAT128 is 1.  */
 # if __HAVE_FLOAT128
-#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0))
+#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)) || defined __clang__
 #   define __CFLOAT128 _Complex long double
 #  else
 #   define __CFLOAT128 _Complex _Float128
@@ -76,7 +76,7 @@
 # if __HAVE_FLOAT128
 
 /* The type _Float128 exists only since GCC 7.0.  */
-#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0))
+#  if !__GNUC_PREREQ (7, 0) || (defined __cplusplus && !__GNUC_PREREQ (13, 0)) || defined __clang__
 typedef long double _Float128;
 #  endif
 
diff -up glibc-2.41/sysdeps/x86/bits/floatn.h.39~ glibc-2.41/sysdeps/x86/bits/floatn.h
--- glibc-2.41/sysdeps/x86/bits/floatn.h.39~	2025-02-03 15:52:10.354515793 +0100
+++ glibc-2.41/sysdeps/x86/bits/floatn.h	2025-02-03 15:56:35.084069414 +0100
@@ -116,7 +116,7 @@ typedef __float128 _Float128;
    been a __builtin_signbitf128 in GCC and the type-generic builtin is
    only available since GCC 6.  signbit is expanded to __builtin_signbit
    after Clang 3.3.  */
-#  if !__GNUC_PREREQ (6, 0)
+#  if !__GNUC_PREREQ (6, 0) || defined(__clang__)
 #   define __builtin_signbitf128 __signbitf128
 #  endif
 
