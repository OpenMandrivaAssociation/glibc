diff -up glibc-2.39/misc/sys/cdefs.h.21~ glibc-2.39/misc/sys/cdefs.h
--- glibc-2.39/misc/sys/cdefs.h.21~	2024-01-31 01:34:58.000000000 +0100
+++ glibc-2.39/misc/sys/cdefs.h	2024-01-31 23:43:38.315917000 +0100
@@ -542,7 +542,7 @@
 # endif
 #endif
 
-#if __GNUC_PREREQ (8, 0)
+#if __GNUC_PREREQ (8, 0) && !defined(__clang__)
 /* Describes a char array whose address can safely be passed as the first
    argument to strncpy and strncat, as the char array is not necessarily
    a NUL-terminated string.  */
@@ -553,7 +553,7 @@
 
 /* Undefine (also defined in libc-symbols.h).  */
 #undef __attribute_copy__
-#if __GNUC_PREREQ (9, 0)
+#if __GNUC_PREREQ (9, 0) && !defined(__clang__)
 /* Copies attributes from the declaration or type referenced by
    the argument.  */
 # define __attribute_copy__(arg) __attribute__ ((__copy__ (arg)))
@@ -674,7 +674,7 @@ _Static_assert (0, "IEEE 128-bits long d
 # define __HAVE_GENERIC_SELECTION 0
 #endif
 
-#if __GNUC_PREREQ (10, 0)
+#if __GNUC_PREREQ (10, 0) && !defined(__clang__)
 /* Designates a 1-based positional argument ref-index of pointer type
    that can be used to access size-index elements of the pointed-to
    array according to access mode, or at least one element when
@@ -701,7 +701,7 @@ _Static_assert (0, "IEEE 128-bits long d
 #  define __attr_access_none(argno)
 #endif
 
-#if __GNUC_PREREQ (11, 0)
+#if __GNUC_PREREQ (11, 0) && !defined(__clang__)
 /* Designates dealloc as a function to call to deallocate objects
    allocated by the declared function.  */
 # define __attr_dealloc(dealloc, argno) \
diff -up glibc-2.39/sysdeps/aarch64/fpu/bits/math-vector.h.21~ glibc-2.39/sysdeps/aarch64/fpu/bits/math-vector.h
--- glibc-2.39/sysdeps/aarch64/fpu/bits/math-vector.h.21~	2024-01-31 23:43:38.315917000 +0100
+++ glibc-2.39/sysdeps/aarch64/fpu/bits/math-vector.h	2024-01-31 23:44:19.720316997 +0100
@@ -91,7 +91,7 @@
 # define __DECL_SIMD_tanf __DECL_SIMD_aarch64
 #endif
 
-#if __GNUC_PREREQ(9, 0)
+#if __GNUC_PREREQ(9, 0) && !defined(__clang__)
 #  define __ADVSIMD_VEC_MATH_SUPPORTED
 typedef __Float32x4_t __f32x4_t;
 typedef __Float64x2_t __f64x2_t;
